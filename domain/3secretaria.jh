
entity CategoriaAluno(sec_categoria_aluno) {
	nome String required unique,
	desconto Double required, // porcetagem
	pagaPropina Boolean,
	pagaMulta Boolean,
	descricao TextBlob,
	diaPagamento Integer min(1),
	mesAtual Boolean,
	ativo Boolean
}

// ocoorencias sao do tipo de ocoorencia: falta na aula, luta na escola, nao tem material, suspernsao

entity Ocorrencia(sec_ocorrencia) {
	data ZonedDateTime required,
	numero String unique required,
	reportarEncarregado Boolean required,
	de LocalDate,
	ate LocalDate,
	descricao TextBlob required
}

entity Aluno(sec_aluno) {
	numeroProcesso String unique required,
	transferido Boolean required,

	// Ficha medica
	fazEducacaoFisica Boolean required,
    grupoSanguinio String,
	autorizaMedicamento Boolean required,
	altura Integer,
	peso Double,
	nomeMedico String,
	contactoMedico String,
	desmaioConstante Boolean,
    complicacoesSaude TextBlob,

	// Escola anterior
	anoConclusao Integer,

	situacao String,
    observacao TextBlob, // Actividades em tempo livre, habilidades, competencias
	data ZonedDateTime
}

entity SituacaoAcademica(sec_situacao_academica) {
	anoLectivo Integer,
	data ZonedDateTime,
	descricao TextBlob
}

entity Matricula(sec_matricula) {
	data ZonedDateTime,
	numeroChamada Integer min(1) required,

    anoLectivo Integer required,

    // Documentos entregue
    fotografia Boolean required,
	certificado Boolean required,
	bilhete Boolean required,
	resenciamentoMilitar Boolean,
	cartaoVacina Boolean,
	atestadoMedico Boolean,
	fichaTransferencia Boolean,
	historicoEscolar Boolean,
	cedula Boolean,

	observacao TextBlob,
	confirmacao Boolean required
}

/**************************************************/
/**
 * One to many relationship.
 */
relationship OneToMany {
    Aluno to Matricula{aluno(numeroProcesso) required},
    Aluno to Ocorrencia{matricula(numeroProcesso) required},
	Aluno to SituacaoAcademica{aluno(numeroProcesso)},

    CategoriaAluno to Matricula{categoria(nome) required},

	Turma to Matricula{turma(descricao) required },

	Curso to Aluno{cursoAnterior(nome)}
}

/**
 * One to one relationship.
 */
relationship OneToOne {
	Aluno{pessoa(nome) required } to Pessoa
}

/**
 * Many to one relationship.
 */
relationship ManyToOne {
	Matricula{periodoLectivo(nome)} to Lookup, // ANUAL, I, II, II, Tri
	Matricula{funcionario(login)} to User,

	Ocorrencia{funcionario(login)} to User,

	Ocorrencia{tipoOcorrencia(nome) required } to Lookup, // FALATA, BRIGA, MATERIAL

	Aluno{meioTrnasporte(nome)} to Lookup, // A PÃ‰, TAXI
	Aluno{alergia(nome)} to Lookup, // NEHUMA
	Aluno{dificiencia(nome)} to Lookup, // NEHUMA
	Aluno{escolaAnterior(nome)} to Lookup,
	Aluno{classeAnterior(nome)} to Lookup,
	Aluno{situacao(nome)} to Lookup, // SUSPENSO, CANCELADO, NORMAL, TRANSFERDIO

	SituacaoAcademica{disciplina(nome)} to Lookup,
	SituacaoAcademica{classe(nome)} to Lookup,
	SituacaoAcademica{periodoLectivo(nome)} to Lookup, // ANUAL, I, II, II, Tri

	SituacaoAcademica{situacaoAcademica(nome)} to Lookup // APROVADO, REPROVADO, RECURSO
}

dto * with mapstruct
paginate * with pagination
service * with serviceClass
search * with elasticsearch
filter Pessoa, Aluno, Matricula
